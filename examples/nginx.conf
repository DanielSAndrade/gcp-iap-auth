worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include      /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format   main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
    access_log   /var/log/nginx/access.log main;
    sendfile     on;
    keepalive_timeout  65;


    upstream auth-server {
      server 10.0.0.1:443;
    }

    server {
      server_name _;
      listen 80;

      # This part assumes you have a gcp-iap-auth server running at
      # https://10.0.0.1:443 which will validate JWT tokens before requests
      # are sent to the servers that using "auth_request /auth"
      location = /auth {
          internal;
          proxy_pass                 https://auth-server;
          proxy_pass_request_body    off;
          proxy_pass_request_headers off;
          proxy_set_header           X-Goog-Authenticated-User-JWT $http_x_goog_authenticated_user_jwt;
      }

      location / {
          return 404;
      }
    }

    # this part assumes you have a "secret" app running at
    # http://10.0.0.2:8000 that is responsible for handling requests to
    # https://secret.example.com received by GCP IAP.
    upstream secret-app {
      server 10.0.0.2:8000;
    }

    server {
      server_name secret.example.com;
      listen 80;

      auth_request /auth;
      location / {
        proxy_pass http://secret-app;
      }
    }
}
